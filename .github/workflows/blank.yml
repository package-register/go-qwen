name: Release Go Library

on:
  push:
    branches:
      - main # 或者你的主分支名称

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许创建标签和发布版本

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史记录

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.20' # 根据你的项目需求调整 Go 版本

      - name: Initialize Version (if needed)
        run: make init

      - name: Bump Patch Version and Tag
        run: make bump-patch && make tag

      - name: Push Tag and Changes
        run: make push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const version = await fs.promises.readFile('VERSION', 'utf8');
            const changelogContent = await fs.promises.readFile('CHANGELOG.md', 'utf8');
            try {
              const { data: release } = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: version.trim(),
                name: `Release ${version.trim()}`,
                body: changelogContent,
                draft: false,
                prerelease: false,
              });
              console.log(`Created release ${release.name} (${release.tag_name})`);
            } catch (error) {
              console.error('Failed to create release:', error);
            }
        env:
          NODE_OPTIONS: '--experimental-json-modules'
          fs: require('fs')
